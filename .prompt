#!/bin/bash
#-------------------------------------------------------------------------------
# File        : .prompt
# Author      : Lewis Russell
# Description : Very useful csh/tcsh/bash prompt for seamless use with Git and
#               SVN.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Arguments
#-------------------------------------------------------------------------------
SHELL=$1
RET_CODE=$2

#-------------------------------------------------------------------------------
# Attributes & Colours
#-------------------------------------------------------------------------------

if [ "$SHELL" == "bash" ]; then
    c_start="\["
      c_end="\]"
       user="\u"
        dir="\W"
else # csh/tcsh
    c_start="%{"
      c_end="%}"
       user="%n"
        dir="%c"
fi

   gray="${c_start}\e[1;30m${c_end}"
    red="${c_start}\e[1;31m${c_end}"
  green="${c_start}\e[1;32m${c_end}"
 yellow="${c_start}\e[1;33m${c_end}"
   blue="${c_start}\e[1;34m${c_end}"
magenta="${c_start}\e[1;35m${c_end}"
   cyan="${c_start}\e[1;36m${c_end}"
  white="${c_start}\e[1;37m${c_end}"
    end="${c_start}\e[0m${c_end}" # This is needed at the end.

if [ "$SHELL" == "bash" ]; then
    dir_colour=$yellow
else
    dir_colour=$magenta
fi

src_ctl_colour="$gray"

#-------------------------------------------------------------------------------
# Return Code
#-------------------------------------------------------------------------------
if [ "$RET_CODE" == 0 ]; then
    ret_colour=$cyan
else
    ret_colour=$red
fi

in_git=`git rev-parse 2>&1`

error=''

#-------------------------------------------------------------------------------
# Source Control
#-------------------------------------------------------------------------------
if [ "$in_git" == "" ]; then
    #-----------------------------------------------------------------------
    # Git
    #-----------------------------------------------------------------------
    has_src_ctrl=1
    info=`timeout 2 git status -sbu --porcelain 2> /dev/null`
    ahead=`echo "$info" | grep 'ahead'  | sed -E 's/.*ahead[[:space:]]+([0-9]+).*/+\1/g'`
    behind=`echo "$info" | grep 'behind' | sed -E 's/.*behind[[:space:]]+([0-9]+).*/-\1/g'`
    files="$info"
    checkout=`echo "$info" | sed -E 's/##[[:space:]]+([[:alnum:]_/\]+).*/\1/g' | head -n1`
else
    #-----------------------------------------------------------------------
    # SVN
    #-----------------------------------------------------------------------
    info=`timeout 2 svn info 2> /tmp/prompt_debug`
    rev=`echo "$info" | grep 'Revision' | sed -E 's/Revision: ([0-9]+)/\1/'`

    if [[ $rev =~ ^[0-9]+$ ]]; then
        has_src_ctrl=1
        repo=`echo "$info" | grep 'URL' | sed -E 's/URL: (.+)/\1/'`
        remote_info=`timeout 2 svn info $repo 2> /tmp/prompt_debug`
        remote_rev=`echo "$remote_info" | grep 'Revision' | sed -E 's/Revision: ([0-9]+)/\1/'`
        if [[ $remote_rev =~ ^[0-9]+$ ]]; then
            behind=`expr $remote_rev - $rev`
            if [ "$behind" == "0" ]; then
                 behind=""
            else
                 behind="-$behind"
            fi
        else
            error="0"
        fi
        ahead=""
        files=`timeout 2 svn status 2> /dev/null`
        checkout="r$rev"
    fi
fi

#---------------------------------------------------------------------------
# Status
#---------------------------------------------------------------------------
src_ctrl=""
if [ "$has_src_ctrl" == "1" ]; then
    staged=`echo "$files" | grep '^ *A\|^M' | wc -l`
    if [ "$staged" == "0" ]; then
         staged=""
    else
         staged="+$staged"
    fi

    unstaged=`echo "$files" | grep '^ \+M' | wc -l`
    if [ "$unstaged" == "0" ]; then
         unstaged=""
    else
         unstaged="+$unstaged"
    fi

    untracked=`echo "$files" | grep '^ *?' | wc -l`
    if [ "$untracked" == "0" ]; then
         untracked=""
    else
         untracked="+$untracked"
    fi

    src_ctrl+="$src_ctl_colour"
    src_ctrl+="["
    src_ctrl+="$checkout"
    src_ctrl+="$white"
    src_ctrl+="$ahead"
    src_ctrl+="$behind"
    src_ctrl+="$green"
    src_ctrl+="$staged"
    src_ctrl+="$red"
    src_ctrl+="$unstaged"
    src_ctrl+="$magenta"
    src_ctrl+="$untracked"
    src_ctrl+="$src_ctl_colour"
    src_ctrl+="]"
fi

#-------------------------------------------------------------------------------
# Prompt
#-------------------------------------------------------------------------------
if [ "$error" != "" ]; then
    error=" ${white}ERROR $error: $(cat /tmp/prompt_debug)"
fi

prompt="$ret_colour"
if [ $(tput cols) -gt 80 ]; then
    prompt+="$user:"
    prompt+="$dir_colour"
    prompt+="$dir"
fi
prompt+="$src_ctrl"
prompt+="$error"
prompt+="$cyan>$end "

echo "$prompt"

