#!/bin/csh
#-------------------------------------------------------------------------------
# File        : .cshprompt
# Author      : Lewis Russell
# Description : Very useful csh/tcsh prompt for seamless use with Git and SVN.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Colours
#-------------------------------------------------------------------------------
set    gray="%{\033[1;30m%}"
set     red="%{\033[1;31m%}"
set   green="%{\033[1;32m%}"
set  yellow="%{\033[1;33m%}"
set    blue="%{\033[1;34m%}"
set magenta="%{\033[1;35m%}"
set    cyan="%{\033[1;36m%}"
set   white="%{\033[1;37m%}"
set     end="%{\033[0m%}" # This is needed at the end.

set src_ctl_colour="$gray"

#-------------------------------------------------------------------------------
# Git
#-------------------------------------------------------------------------------
set GIT_STATUS=""
set GIT_INFO=`sh -c "timeout 2 git status -sb 2> /dev/null"`
set GIT_BRANCH=`echo "$GIT_INFO" | sed -e 's/##\s\+\([[:alnum:]_\/]\+\).*/\1/g'`

if ("$GIT_BRANCH" != "") then
    #---------------------------------------------------------------------------
    # Commits ahead/behind remote
    #---------------------------------------------------------------------------
    set GIT_AHEAD=`echo "$GIT_INFO" | grep 'ahead' | sed -e 's/.*ahead\s\+\([0-9]\+\).*/+\1/g'`
    set GIT_BEHIND=`echo "$GIT_INFO" | grep 'behind' | sed -e 's/.*behind\s\+\([0-9]\+\).*/-\1/g'`

    #---------------------------------------------------------------------------
    # Unstaged files
    #---------------------------------------------------------------------------
    set GIT_UNSTAGED=`sh -c "timeout 2 git diff --numstat 2> /dev/null" | wc -l`
    if ("$GIT_UNSTAGED" == "0") then
        set GIT_UNSTAGED=""
    else
        set GIT_UNSTAGED="+${GIT_UNSTAGED}"
    endif

    #---------------------------------------------------------------------------
    # Staged files
    #---------------------------------------------------------------------------
    set GIT_STAGED=`sh -c "timeout 2 git diff --cached --numstat 2> /dev/null" | wc -l`
    if ("$GIT_STAGED" == "0") then
        set GIT_STAGED=""
    else
        set GIT_STAGED="+${GIT_STAGED}"
    endif

    #---------------------------------------------------------------------------
    # Status
    #---------------------------------------------------------------------------
    set GIT_STATUS="${src_ctl_colour}[${GIT_BRANCH}${white}${GIT_AHEAD}${GIT_BEHIND}${red}${GIT_UNSTAGED}${green}${GIT_STAGED}${src_ctl_colour}]"
endif

#-------------------------------------------------------------------------------
# SVN
#-------------------------------------------------------------------------------
set SVN_STATUS=""
set SVN_REV=`sh -c "timeout 2 svn info 2> /dev/null" | grep 'Revision' | sed 's/Revision: \([0-9]\+\)/\1/'`

if ("$SVN_REV" != "") then
    #---------------------------------------------------------------------------
    # Revisions behind remote
    #---------------------------------------------------------------------------
    set SVN_REPO=`sh -c "timeout 2 svn info 2> /dev/null" | grep 'Repository Root' | sed 's/Repository Root: \(.\+\)/\1/'`
    set SVN_REPO_REV=`sh -c "timeout 2 svn info ${SVN_REPO} 2> /dev/null" | grep 'Revision' | sed 's/Revision: \([0-9]\+\)/\1/'`
    set SVN_BEHIND=`expr $SVN_REPO_REV - $SVN_REV`
    if ("$SVN_BEHIND" == "0") then
        set SVN_BEHIND=""
    else
        set SVN_BEHIND="-${SVN_BEHIND}"
    endif

    #---------------------------------------------------------------------------
    # Changed files
    #---------------------------------------------------------------------------
    set SVN_CHANGED=`sh -c 'timeout 2 svn st 2> /dev/null' | wc -l`
    if ("$SVN_CHANGED" == "0") then
        set SVN_CHANGED=""
    else
        set SVN_CHANGED="+${SVN_CHANGED}"
    endif

    #---------------------------------------------------------------------------
    # Status
    #---------------------------------------------------------------------------
    set SVN_STATUS="${src_ctl_colour}[r${SVN_REV}${white}${SVN_BEHIND}${red}${SVN_CHANGED}${src_ctl_colour}]"
endif

#-------------------------------------------------------------------------------
# Prompt
#-------------------------------------------------------------------------------
set SRC_CTRL="${GIT_STATUS}${SVN_STATUS}"

set prompt="${cyan}%n:${magenta}%c${SRC_CTRL}${cyan}>>${end} "

